This project is to implement Dijkstra's shortest path algorithm. 

1. The code can be able to read a data file consisting of many lines (an example file called data31.txt will be given,
explained below) and will be able to find the lowest cost paths (findShortestPath function) and
display the cost and path from every node to every other node (displayAll function). Another
display routine (display function) will output one path in detail.

2. In the input data (e.g., data31.txt), the first line tells the number of nodes, say n, followed by a
text description of each of the 1 through n nodes, one description per line (50 chars max length).
After that, each line consists of 3 integers representing an edge. If there is an edge from node 1 to
node 2 with a label of 10, the data is: 1 2 10. If the first integer is zero, it means the end of the
data for that one graph. There may be several graphs, each having at most 100 nodes. For
example, Figure 1 (a) shows part of data from data31.txt (the data file you will be given) where it
contains 5 nodes. For clarity, (b) shows a graph drawn based on data in (a). However, Figure 1 (b)
is just for the reference. Itâ€™s not part of the input data or the output you need to produce. For
this lab (including part 2,) you may assume the input data file has correctly formatted, valid data.
